# Copyright (c) 2020 Red Hat, Inc.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: console-header
  labels:
    app: {{ template "console.name" . }}
    component: "console-header"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "console.name" . }}
    helm.sh/chart: {{ template "console.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      k8s-app: console-header
      app: console-header
      component: "console-header"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: console-header
        app: console-header
        component: "console-header"
        release: {{ .Release.Name }}
        heritage: {{.Release.Service | quote }}
        chart: {{ template "console.chart" . }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range .Values.arch }}
                - {{ . }}
                {{- end }}
            
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "console.name" . }}
                - key: component
                  operator: In
                  values:
                  - console-header
          - weight: 35
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "console.name" . }}
                - key: component
                  operator: In
                  values:
                  - console-header
      serviceAccountName: {{ template "console.fullname" . }}
      volumes:
      - name: log4js
        configMap:
          name: console-header-log4js
          items:
          - key: log4js.json
            path: log4js.json
      - name: cluster-ca
        secret:
          defaultMode: 420
          items:
          - key: tls.key
            path: ca.key
          - key: tls.crt
            path: ca.crt
          secretName: multicloud-ca-cert
      terminationGracePeriodSeconds: 60
      tolerations:
      - key: "dedicated"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
        - name: console-header
          image: {{ .Values.global.imageOverrides.console_header }}
          resources:
{{ toYaml .Values.consoleheader.resources | indent 12 }}
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
              - ALL
          readinessProbe:
            httpGet:
              path: /readinessProbe
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /livenessProbe
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 30
          volumeMounts:
          - name: log4js
            mountPath: /etc/config
          - mountPath: /opt/app-root/console-header/certs
            name: cluster-ca
          env:
            - name: headerContextPath
              value: {{ .Values.consoleheader.ingressPath}}
            - name: headerUrl
              value: {{ .Values.cfcRouterUrl }}
            - name: NODE_EXTRA_CA_CERTS
              value: /opt/app-root/console-header/certs/ca.crt
            - name: NAV_PORT
              value: "{{ .Values.navPort }}"
            - name: default_admin_user
              value: admin
            - name: SESSION_POLLING_INTERVAL
              value: "300"
      {{- if .Values.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.pullSecret }}
      {{- end }}
      {{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 8 }}
      {{- end }}
